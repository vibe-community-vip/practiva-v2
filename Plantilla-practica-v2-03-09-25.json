{
  "name": "My workflow 22",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -32,
        592
      ],
      "id": "be026939-cfb3-454d-bcb3-49d31d5d8f94",
      "name": "Telegram Trigger",
      "webhookId": "cf4966d5-ec56-493d-bb27-6206095287c7",
      "credentials": {
        "telegramApi": {
          "id": "FhKSvw15HsLNTLKm",
          "name": "Prueba nano banana"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=qwdqewdsdss{{ $('Telegram Trigger').item.json.message.chat.id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1184,
        448
      ],
      "id": "e366d16a-77a1-48ef-86f0-8578247a4d72",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output.removeMarkdown() }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1376,
        592
      ],
      "id": "b23923fb-9c8c-4696-8da4-60209d93fa36",
      "name": "Send a text message",
      "webhookId": "8b304905-b9e1-47c0-97d7-2547599e1c33",
      "credentials": {
        "telegramApi": {
          "id": "FhKSvw15HsLNTLKm",
          "name": "Prueba nano banana"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        928,
        448
      ],
      "id": "2be57d7f-491f-45f4-ac36-69b09711dc30",
      "name": "4.1",
      "credentials": {
        "openAiApi": {
          "id": "rprMsvriveuVeYby",
          "name": "OpenAI Kevinrivm"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        816,
        864
      ],
      "id": "227fa548-d695-4a4a-bf79-c87225673cb7",
      "name": "Agente de agendamiento"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1184,
        864
      ],
      "id": "24caba23-1f1e-41d3-999d-75bc9a38fcb7",
      "name": "Agente de contenido",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1536,
        864
      ],
      "id": "e62e8d79-5704-404d-ab48-751c0bce1bf3",
      "name": "Agente de procesos",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Script para obtener el file_id de la imagen más grande, chat.id y caption\n// Funciona con datos de entrada de Telegram Bot API\n\n// Obtener los datos de entrada\nconst items = $input.all();\nconst results = [];\n\nfor (const item of items) {\n  const data = item.json;\n  \n  // Verificar si existe el array photo en el mensaje\n  if (data.message && data.message.photo && Array.isArray(data.message.photo)) {\n    const photos = data.message.photo;\n    \n    // Encontrar la imagen con mayor file_size\n    let largestPhoto = null;\n    let maxSize = 0;\n    \n    for (const photo of photos) {\n      if (photo.file_size && photo.file_size > maxSize) {\n        maxSize = photo.file_size;\n        largestPhoto = photo;\n      }\n    }\n    \n    // Si encontramos una imagen, devolver solo los campos solicitados\n    if (largestPhoto) {\n      results.push({\n        json: {\n          file_id: largestPhoto.file_id,\n          chat_id: data.message.chat.id,\n          caption: data.message.caption || null\n        }\n      });\n    } else {\n      // Si no hay fotos, devolver error con estructura mínima\n      results.push({\n        json: {\n          file_id: null,\n          chat_id: data.message.chat ? data.message.chat.id : null,\n          caption: null,\n          error: \"No photos found in message\"\n        }\n      });\n    }\n  } else {\n    // Si no es un mensaje con fotos, devolver estructura mínima\n    results.push({\n      json: {\n        file_id: null,\n        chat_id: data.message && data.message.chat ? data.message.chat.id : null,\n        caption: null,\n        error: \"Message does not contain photo array\"\n      }\n    });\n  }\n}\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        416,
        784
      ],
      "id": "0e38cf0d-db23-4676-addb-a11048c28c0d",
      "name": "obtenerImagenGrande"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "21cc03f5-a0a4-4267-adba-a054064e007c",
              "name": "file_id",
              "value": "={{ $json.file_id }}",
              "type": "string"
            },
            {
              "id": "b24e0ec9-c28b-408d-a010-0a45874e3ec9",
              "name": "chat_id",
              "value": "={{ $json.chat_id }}",
              "type": "number"
            },
            {
              "id": "18829d81-7977-4494-90dc-222a4a85d99d",
              "name": "text",
              "value": "={{ $json.caption }} **Desde una imagen**",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        640,
        784
      ],
      "id": "733a53b0-a9fb-4beb-8721-7f89165e828f",
      "name": "setIdImagen"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        416,
        400
      ],
      "id": "412627c5-8315-4fa9-99a5-0c9633419766",
      "name": "obtenerAudio",
      "webhookId": "6ebfc5b1-bb49-48c3-b5ac-9f303b978db9",
      "notesInFlow": false,
      "credentials": {
        "telegramApi": {
          "id": "FhKSvw15HsLNTLKm",
          "name": "Prueba nano banana"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        640,
        400
      ],
      "id": "eda19b86-3488-4b6a-948b-5494427adb00",
      "name": "transcribirAudio",
      "credentials": {
        "openAiApi": {
          "id": "rprMsvriveuVeYby",
          "name": "OpenAI Kevinrivm"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "40c7d190-14c7-4798-8cdc-0fad8b1edf0f",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        416,
        592
      ],
      "id": "72533173-b4e5-46a0-a6e9-17e668d5ffa1",
      "name": "setTexto"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "b8699367-474b-4233-9062-008da0eeef41"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voz"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1a865cc2-e39e-45e8-abaa-a804a0de115d",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "56211cee-fbd8-4c05-9ea7-c699816149f8",
                    "leftValue": "={{ $json.message.photo }}",
                    "rightValue": "",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagen"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        192,
        576
      ],
      "id": "94c081d4-9302-468e-9b0b-fce1d87b3c72",
      "name": "switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Instrucción: {{ $json.text }}\nID de imagen: {{ $json.file_id || 'Sin imagen adjunta' }}",
        "options": {
          "systemMessage": "="
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1008,
        592
      ],
      "id": "0f53b813-f2b1-4441-a9ab-f44775bb6c9b",
      "name": "Agente orquestador"
    },
    {
      "parameters": {
        "content": "![Logo Vibe VIP](https://subir-imagen.com/images/2025/07/25/Logo-Vibe-VIP.png)",
        "height": 240,
        "width": 368,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        48,
        32
      ],
      "id": "636a0ec2-f6fb-4e6c-94a6-a1966e677318",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# 🚀 Plantilla base práctica grupal\n\nNo olvides seguir las buenas prácticas\n- Documentar con notas en markdown\n- Usar apis cloud y gratuitas\n- Poner tus credenciales desde el dropdown del nodo (no desde el header)",
        "height": 240,
        "width": 816,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        448,
        32
      ],
      "id": "f7ddf354-38d3-4a94-8603-1ec0ae60fafc",
      "name": "Sticky Note3"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Agente orquestador",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Agente orquestador",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Agente de agendamiento": {
      "ai_tool": [
        [
          {
            "node": "Agente orquestador",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agente de contenido": {
      "ai_tool": [
        [
          {
            "node": "Agente orquestador",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agente de procesos": {
      "ai_tool": [
        [
          {
            "node": "Agente orquestador",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "obtenerImagenGrande": {
      "main": [
        [
          {
            "node": "setIdImagen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "setIdImagen": {
      "main": [
        [
          {
            "node": "Agente orquestador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtenerAudio": {
      "main": [
        [
          {
            "node": "transcribirAudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribirAudio": {
      "main": [
        [
          {
            "node": "Agente orquestador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "setTexto": {
      "main": [
        [
          {
            "node": "Agente orquestador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch": {
      "main": [
        [
          {
            "node": "obtenerAudio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "setTexto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "obtenerImagenGrande",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente orquestador": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9d8747a358c6ef7f467b6ae415e9e8b134cc3cfbb4ead13516b19d9211ae0b58"
  },
  "tags": []
}